# Script de instala√ß√£o dos hooks do Git para detec√ß√£o de duplicatas
# Execute como: powershell -ExecutionPolicy Bypass -File install-hooks.ps1

Write-Host "üîß Instalando hooks do Git para detec√ß√£o de duplicatas..." -ForegroundColor Cyan

# Verificar se estamos em um reposit√≥rio Git
if (-not (Test-Path ".git")) {
    Write-Host "‚ùå Este n√£o √© um reposit√≥rio Git v√°lido" -ForegroundColor Red
    exit 1
}

# Verificar se PHP est√° dispon√≠vel
try {
    $phpVersion = php -v 2>$null
    if ($LASTEXITCODE -ne 0) {
        throw "PHP n√£o encontrado"
    }
    Write-Host "‚úÖ PHP encontrado" -ForegroundColor Green
} catch {
    Write-Host "‚ùå PHP n√£o encontrado. Instale PHP para usar a detec√ß√£o de duplicatas." -ForegroundColor Red
    exit 1
}

# Verificar se os scripts de detec√ß√£o existem
$detectorPath = "./scripts/duplicate-detector/detect-duplicates.php"
if (-not (Test-Path $detectorPath)) {
    Write-Host "‚ùå Script detector n√£o encontrado: $detectorPath" -ForegroundColor Red
    exit 1
}

Write-Host "‚úÖ Scripts de detec√ß√£o encontrados" -ForegroundColor Green

# Criar diret√≥rio de hooks se n√£o existir
$hooksDir = ".git/hooks"
if (-not (Test-Path $hooksDir)) {
    New-Item -ItemType Directory -Path $hooksDir -Force | Out-Null
}

# Configurar Git para usar os hooks
Write-Host "üîß Configurando Git hooks..." -ForegroundColor Cyan

# Configurar core.hooksPath
git config core.hooksPath .git/hooks
if ($LASTEXITCODE -eq 0) {
    Write-Host "‚úÖ core.hooksPath configurado" -ForegroundColor Green
} else {
    Write-Host "‚ö†Ô∏è  Aviso: N√£o foi poss√≠vel configurar core.hooksPath" -ForegroundColor Yellow
}

# Verificar se os hooks foram criados
$preCommitHook = ".git/hooks/pre-commit"
$preMergeHook = ".git/hooks/pre-merge-commit"

if (Test-Path $preCommitHook) {
    Write-Host "‚úÖ Hook pre-commit instalado" -ForegroundColor Green
} else {
    Write-Host "‚ùå Hook pre-commit n√£o encontrado" -ForegroundColor Red
}

if (Test-Path $preMergeHook) {
    Write-Host "‚úÖ Hook pre-merge-commit instalado" -ForegroundColor Green
} else {
    Write-Host "‚ùå Hook pre-merge-commit n√£o encontrado" -ForegroundColor Red
}

# Testar a detec√ß√£o de duplicatas
Write-Host "\nüß™ Testando detec√ß√£o de duplicatas..." -ForegroundColor Cyan
try {
    php $detectorPath --scan . | Out-Null
    if ($LASTEXITCODE -eq 0) {
        Write-Host "‚úÖ Teste de detec√ß√£o bem-sucedido" -ForegroundColor Green
    } else {
        Write-Host "‚ö†Ô∏è  Teste de detec√ß√£o com avisos" -ForegroundColor Yellow
    }
} catch {
    Write-Host "‚ùå Erro no teste de detec√ß√£o: $_" -ForegroundColor Red
}

# Mostrar configura√ß√µes dispon√≠veis
Write-Host "\nüìã CONFIGURA√á√ïES DISPON√çVEIS:" -ForegroundColor Cyan
Write-Host "\nüîß Vari√°veis de ambiente para controle:" -ForegroundColor White
Write-Host "  ALLOW_DUPLICATE_MERGE=true    - Permite merge mesmo com duplicatas" -ForegroundColor Gray
Write-Host "  STRICT_DUPLICATE_CHECK=true   - Bloqueia commits com duplicatas" -ForegroundColor Gray

Write-Host "\nüìä Comandos √∫teis:" -ForegroundColor White
Write-Host "  php scripts/duplicate-detector/detect-duplicates.php --scan     - Escanear duplicatas" -ForegroundColor Gray
Write-Host "  php scripts/duplicate-detector/detect-duplicates.php --report   - Ver relat√≥rio" -ForegroundColor Gray
Write-Host "  php scripts/duplicate-detector/detect-duplicates.php --remove   - Remover duplicatas" -ForegroundColor Gray

Write-Host "\nüéâ Instala√ß√£o conclu√≠da!" -ForegroundColor Green
Write-Host "Os hooks agora verificar√£o duplicatas automaticamente em commits e merges." -ForegroundColor White